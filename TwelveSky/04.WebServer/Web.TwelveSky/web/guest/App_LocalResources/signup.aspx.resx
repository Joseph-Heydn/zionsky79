<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lblCancel.Text" xml:space="preserve">
    <value>CANCEL</value>
  </data>
  <data name="lblChkAgree_01.Text" xml:space="preserve">
    <value>I understand and agree to the</value>
  </data>
  <data name="lblChkAgree_02.Text" xml:space="preserve">
    <value>and the</value>
  </data>
  <data name="lblContinue.Text" xml:space="preserve">
    <value>CONTINUE</value>
  </data>
  <data name="lblEmail.Text" xml:space="preserve">
    <value>E-mail address:</value>
  </data>
  <data name="lblEmail2.Text" xml:space="preserve">
    <value>Confirm E-mail:</value>
  </data>
  <data name="lblHome.Text" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="lblNickName.Text" xml:space="preserve">
    <value>Nickname:</value>
  </data>
  <data name="lblPassword.Text" xml:space="preserve">
    <value>Password:</value>
  </data>
  <data name="lblPassword2.Text" xml:space="preserve">
    <value>Confirm Password:</value>
  </data>
  <data name="lblPrivacy.Text" xml:space="preserve">
    <value>Privacy Policy</value>
  </data>
  <data name="lblReceiveMail.Text" xml:space="preserve">
    <value>I would like to receive the KJ GAMES News, updaes, and events.</value>
  </data>
  <data name="lblSecEmail_01.Text" xml:space="preserve">
    <value>* Security Email :</value>
  </data>
  <data name="lblSecEmail_02.Text" xml:space="preserve">
    <value>Input this Email if you have forgotten your Id</value>
  </data>
  <data name="lblSecurity.Text" xml:space="preserve">
    <value>Security Email:</value>
  </data>
  <data name="lblTerms.Text" xml:space="preserve">
    <value>Terms of Use</value>
  </data>
  <data name="msgError_01" xml:space="preserve">
    <value>error occured during initialize page!!</value>
  </data>
  <data name="msgError_02" xml:space="preserve">
    <value>Must be a valid email format.</value>
  </data>
  <data name="msgError_03" xml:space="preserve">
    <value>To create new account, you should not be logged in.</value>
  </data>
  <data name="msgError_04" xml:space="preserve">
    <value>Please enter your Email address.</value>
  </data>
  <data name="msgError_05" xml:space="preserve">
    <value>That email address is already registered. Use it to log in to an existing account or try again with a different address.</value>
  </data>
  <data name="msgError_06" xml:space="preserve">
    <value>Must be a valid Secondary email format.</value>
  </data>
  <data name="msgError_07" xml:space="preserve">
    <value>A Secondary email cannot be matched with the login email address.</value>
  </data>
  <data name="msgError_08" xml:space="preserve">
    <value>E-mail address does not match.</value>
  </data>
  <data name="msgError_09" xml:space="preserve">
    <value>our password can contain letters, digits, and symbols. Must contain a mix of upper and lower case letters, and must be between 8 - 16 characters long.</value>
  </data>
  <data name="msgError_10" xml:space="preserve">
    <value>Your password should be between 8 - 16 characters long.</value>
  </data>
  <data name="msgError_11" xml:space="preserve">
    <value>Password does not match.</value>
  </data>
  <data name="msgError_12" xml:space="preserve">
    <value>Please create your nickname between 6~16 letters.</value>
  </data>
  <data name="msgError_13" xml:space="preserve">
    <value>Please enter the Nickname.</value>
  </data>
  <data name="msgError_14" xml:space="preserve">
    <value>That nick name is already used.</value>
  </data>
  <data name="msgError_15" xml:space="preserve">
    <value>Please check for duplicate Email Id.</value>
  </data>
  <data name="msgError_16" xml:space="preserve">
    <value>Please enter the Security Email.</value>
  </data>
  <data name="msgError_17" xml:space="preserve">
    <value>Must be a valid Security email format.</value>
  </data>
  <data name="msgError_18" xml:space="preserve">
    <value>Please check for duplicate nickname.</value>
  </data>
  <data name="msgError_19" xml:space="preserve">
    <value>You must agree to the Terms of use and Privacy policy.</value>
  </data>
  <data name="msgError_20" xml:space="preserve">
    <value>Page Error!</value>
  </data>
  <data name="msgError_21" xml:space="preserve">
    <value>error occured during entry account.</value>
  </data>
  <data name="msgError_22" xml:space="preserve">
    <value>security string is not valid!!</value>
  </data>
</root>